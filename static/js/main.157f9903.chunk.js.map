{"version":3,"sources":["components/User/User.jsx","components/UsersList/UsersList.jsx","components/UserSection/UserSection.jsx","components/Popup/Popup.jsx","App.js","index.js"],"names":["User","firstName","lastName","title","picture","className","src","alt","UsersList","React","memo","newUsers","queryParams","method","headers","useState","users","setUsers","getUsers","a","fetch","then","res","json","data","useEffect","map","newUser","id","user","UserSection","addNewUser","activatePopup","formOpen","setFormOpen","setTitle","avatar","setAvatar","name","setName","surname","setSurname","email","setEmail","emailValid","setEmailValid","nameRef","useRef","surnameRef","emailRef","userInfo","handleFormField","event","callback","ref","value","target","current","classList","remove","add","createUser","body","JSON","stringify","error","onClick","onSubmit","validation","match","preventDefault","onChange","type","placeholder","classNames","Popup","status","App","setNewUsers","popupOpen","setPopupOpen","setTimeout","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.157f9903.chunk.js","sourcesContent":["import './User.css';\n\nconst User = ({ firstName, lastName, title, picture }) => (\n  <div className=\"user-info\">\n    <div className=\"user-info__photo\">\n      <img src={picture} alt={`${firstName} ${lastName}`} />\n    </div>\n    <p className=\"user-info__description\">\n      {`${title || ''} ${firstName} ${lastName}`}\n    </p>\n  </div>\n);\n\nexport default User;\n","import React, { useState, useEffect } from 'react';\nimport User from '../User/User';\n\nimport './UsersList.css';\n\nconst UsersList = React.memo(({ newUsers }) => {\n  const url = 'https://dummyapi.io/data/v1/user';\n  const queryParams = {\n    method: 'GET',\n    headers: {\n      'app-id': '6154537832884b1a024b2f3c',\n      'Content-Type': 'application/json'\n    }\n  };\n  const [users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    const { data } = await fetch(url, queryParams).then(res => res.json());\n\n    setUsers(data);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <div className=\"users-list\">\n      {newUsers.map(newUser => (\n        <User key={newUser.id} {...newUser} />\n      ))}\n      {users.map(user => (\n        <User key={user.id} {...user} />\n      ))}\n    </div>\n  );\n});\n\nexport default UsersList;\n","import { useState, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport './UserSection.css';\n\nconst UserSection = ({ addNewUser, activatePopup }) => {\n  const url = 'https://dummyapi.io/data/v1/user/create';\n  const [formOpen, setFormOpen] = useState(false);\n  const [title, setTitle] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailValid, setEmailValid] = useState(true);\n  const nameRef = useRef(null);\n  const surnameRef = useRef(null);\n  const emailRef = useRef(null);\n  const userInfo = {\n    firstName: name,\n    lastName: surname,\n    email,\n    picture: avatar\n  };\n\n  const handleFormField = (event, callback, ref) => {\n    const { value } = event.target;\n\n    callback(value);\n\n    if (!ref) return;\n\n    value\n      ? ref.current.classList.remove('danger')\n      : ref.current.classList.add('danger');\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setName('');\n    setSurname('');\n    setEmail('');\n    setAvatar('');\n  };\n\n  const fieldValidation = () => {\n    name\n      ? nameRef.current.classList.remove('danger')\n      : nameRef.current.classList.add('danger');\n\n    surname\n      ? surnameRef.current.classList.remove('danger')\n      : surnameRef.current.classList.add('danger');\n\n    email\n      ? emailRef.current.classList.remove('danger')\n      : emailRef.current.classList.add('danger');\n\n    setEmailValid(email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\n  };\n\n  const createUser = async () => {\n    if (title) userInfo.title = title;\n\n    const newUser = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(userInfo),\n      headers: {\n        'app-id': '6154537832884b1a024b2f3c',\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => res.json());\n\n      if (newUser.error) {\n        activatePopup('error');\n\n        return;\n      }\n\n      activatePopup('success');\n      addNewUser(newUser);\n  };\n\n  const addUser = (event) => {\n    const validation = email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n\n    event.preventDefault();\n    fieldValidation();\n\n    if (!name || !surname || !email || !validation) return;\n\n    createUser();\n    clearForm();\n    setFormOpen(false)\n  };\n\n  return (\n    <div className=\"user-section\">\n      <button\n        className=\"user-section__button\"\n        onClick={() => setFormOpen(!formOpen)}\n      >\n        {formOpen ? 'Close' : 'Open'} form\n      </button>\n\n      {formOpen && (\n        <form\n        className=\"user-section__form\"\n        onSubmit={addUser}\n      >\n        <select\n          name=\"title\"\n          value={title}\n          onChange={(event) => handleFormField(event, setTitle)}\n        >\n          <option value=\"\">Choose a title</option>\n          <option value=\"mr\">mr</option>\n          <option value=\"mrs\">mrs</option>\n          <option value=\"ms\">ms</option>\n          <option value=\"miss\">miss</option>\n          <option value=\"dr\">dr</option>\n        </select>\n        <div className=\"field-wrapper\" ref={nameRef}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"First name\"\n            onChange={(event) => handleFormField(event, setName, nameRef)}\n          />\n        </div>\n        <div className=\"field-wrapper\" ref={surnameRef}>\n          <input\n            type=\"text\"\n            name=\"surname\"\n            value={surname}\n            placeholder=\"Last name\"\n            onChange={(event) => handleFormField(event, setSurname, surnameRef)}\n          />\n        </div>\n        <div\n          ref={emailRef}\n          className={classNames(\"field-wrapper\", {\n            \"email-error\": !emailValid\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            onChange={(event) => handleFormField(event, setEmail, emailRef)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          name=\"avatar\"\n          value={avatar}\n          placeholder=\"Avatar URL\"\n          onChange={(event) => handleFormField(event, setAvatar)}\n        />\n        <button>Add user</button>\n      </form>\n      )}\n    </div>\n  );\n};\n\nexport default UserSection;\n","import './Popup.css';\n\nconst Popup = ({ status }) => (\n  <div className={`pop-up ${status}`}>\n    {status}\n  </div>\n);\n\nexport default Popup;\n","import { useState } from 'react';\n\nimport UsersList from './components/UsersList/UsersList';\nimport UserSection from './components/UserSection/UserSection';\nimport Popup from './components/Popup/Popup';\n\nimport './App.css';\n\nconst App = () => {\n  const [newUsers, setNewUsers] = useState([]);\n  const [popupOpen, setPopupOpen] = useState(true);\n\n  setTimeout(() => {\n    setPopupOpen(false);\n  }, 5000);\n\n  const addNewUser = (user) => {\n    setNewUsers(prev => [\n      user,\n      ...prev\n    ]);\n  };\n\n  const activatePopup = (status) => {\n    setPopupOpen(status);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <UsersList newUsers={newUsers} />\n        <UserSection\n          addNewUser={addNewUser}\n          activatePopup={activatePopup}\n        />\n        {popupOpen && (\n          <Popup status={popupOpen} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}